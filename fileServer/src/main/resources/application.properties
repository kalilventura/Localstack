spring.application.name=media-service
server.port=8081

aws.access_key_id=
aws.secret_access_key=

s3.bucket=files
s3.region=sa-east-1
s3.endpoint=http://localhost:4566

sns.region=sa-east-1
sns.endpoint=http://localhost:4566

sqs.region=sa-east-1
sqs.endpoint=http://localhost:4566
sqs.queuename=files

lambda.region=sa-east-1
lambda.endpoint=http://localhost:4566
lambda.function=python

img.prefix.profile=cp
img.prefix.event=files
img.profile.size=200

## MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/archives
spring.datasource.username=root
spring.datasource.password=x!ekxxlo098@ec
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#`hibernate_sequence' doesn't exist
spring.jpa.hibernate.use-new-id-generator-mappings=false
# drop n create table, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB