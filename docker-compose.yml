version: "2.1"

services:
  localstack:
    container_name: localstack
    image: localstack/localstack
    depends_on:
      - dynamodb-local
      - database
    ports:
      - "4566:4566"
      - "4571:4571"
    environment:
      - SERVICES=sqs,s3,sns,cloudformation,lambda
      - DEBUG=${DEBUG- }
      - DATA_DIR=${DATA_DIR- }
      - PORT_WEB_UI=${PORT_WEB_UI- }
      - LAMBDA_EXECUTOR=local
      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOST_TMP_FOLDER=${TMPDIR}
    volumes:
      - "data_volume:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - application-network

  database:
    container_name: mysql
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    depends_on:
      - dynamodb-local
    ports:
      - "3306:3306"
    environment:
      TZ: America/Sao_Paulo
      MYSQL_DATABASE: archives
      MYSQL_USER: applicationEvent
      MYSQL_PASSWORD: dhcllkrjkdl@#4984834
      MYSQL_ROOT_PASSWORD: x!ekxxlo098@ec
    volumes:
      - data_volume:/var/lib/mysql
    networks:
      - application-network

  dynamodb-local:
    container_name: dynamodb-local
    image: "amazon/dynamodb-local:latest"
    command: "-jar DynamoDBLocal.jar -sharedDb -optimizeDbBeforeStartup -dbPath ./data"
    ports:
      - "8001:8000"
    volumes:
      - "data_volume:/home/dynamodblocal/data"
    networks:
      - application-network

networks:
  application-network:
    driver: bridge

volumes:
  data_volume:
    driver: local
